// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace account
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct CreateCharacterReq : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static CreateCharacterReq GetRootAsCreateCharacterReq(ByteBuffer _bb) { return GetRootAsCreateCharacterReq(_bb, new CreateCharacterReq()); }
  public static CreateCharacterReq GetRootAsCreateCharacterReq(ByteBuffer _bb, CreateCharacterReq obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CreateCharacterReq __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Nickname { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNicknameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNicknameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNicknameArray() { return __p.__vector_as_array<byte>(4); }
  public byte JobClass { get { int o = __p.__offset(6); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }

  public static Offset<account.CreateCharacterReq> CreateCreateCharacterReq(FlatBufferBuilder builder,
      StringOffset nicknameOffset = default(StringOffset),
      byte job_class = 0) {
    builder.StartTable(2);
    CreateCharacterReq.AddNickname(builder, nicknameOffset);
    CreateCharacterReq.AddJobClass(builder, job_class);
    return CreateCharacterReq.EndCreateCharacterReq(builder);
  }

  public static void StartCreateCharacterReq(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddNickname(FlatBufferBuilder builder, StringOffset nicknameOffset) { builder.AddOffset(0, nicknameOffset.Value, 0); }
  public static void AddJobClass(FlatBufferBuilder builder, byte jobClass) { builder.AddByte(1, jobClass, 0); }
  public static Offset<account.CreateCharacterReq> EndCreateCharacterReq(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<account.CreateCharacterReq>(o);
  }
};


}
